{
  "openapi": "3.0.0",
  "info": {
    "title": "KBlocks API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3001",
      "description": "Local server"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "summary": "Root",
        "operationId": "getRoot",
        "responses": {
          "200": {
            "description": "Hello message",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/sign-in": {
      "get": {
        "summary": "GitHub sign-in",
        "operationId": "signInWithGitHub",
        "responses": {
          "303": {
            "description": "Redirect to GitHub for authentication"
          }
        }
      }
    },
    "/api/auth/sign-out": {
      "get": {
        "summary": "Sign out",
        "operationId": "signOut",
        "responses": {
          "303": {
            "description": "Redirect to home"
          }
        }
      }
    },
    "/api/auth/reject": {
      "get": {
        "summary": "Sign out non-whitelisted users",
        "operationId": "signOutNonWhitelisted",
        "responses": {
          "200": {
            "description": "User is not whitelisted and was signed out",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/categories": {
      "get": {
        "summary": "Get categories",
        "operationId": "getCategories",
        "responses": {
          "200": {
            "description": "List of categories",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/events": {
      "get": {
        "summary": "WebSocket for events",
        "operationId": "subscribeToEvents",
        "responses": {
          "101": {
            "description": "Switching protocols"
          }
        }
      },
      "post": {
        "summary": "Publish an event",
        "operationId": "postEvent",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkerEvent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Event published"
          }
        }
      }
    },
    "/api/resources": {
      "get": {
        "summary": "Get resources",
        "operationId": "getResources",
        "responses": {
          "200": {
            "description": "Resources",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetResourceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/resources/{group}/{version}/{plural}/{system}/{namespace}/{name}": {
      "parameters": [
        {
          "name": "group",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "version",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "plural",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "system",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "namespace",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "name",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Get specific resource",
        "operationId": "getResource",
        "responses": {
          "200": {
            "description": "Specific resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiObject"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update a resource",
        "operationId": "patchResource",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiObject"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Patch request accepted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "objType": {
                      "type": "string"
                    },
                    "obj": {
                      "$ref": "#/components/schemas/ApiObject"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a resource",
        "operationId": "deleteResource",
        "responses": {
          "200": {
            "description": "Delete request accepted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/resources/{group}/{version}/{plural}/{system}/{namespace}/{name}/logs": {
      "get": {
        "summary": "Get logs of specific resource",
        "operationId": "getResourceLogs",
        "responses": {
          "200": {
            "description": "Logs of the resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "objUri": {
                      "type": "string"
                    },
                    "logs": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/WorkerEvent"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/resources/{group}/{version}/{plural}/{system}/{namespace}/{name}/events": {
      "get": {
        "summary": "Get events of specific resource",
        "operationId": "getResourceEvents",
        "responses": {
          "200": {
            "description": "Events of the resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "objUri": {
                      "type": "string"
                    },
                    "events": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/WorkerEvent"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/projects": {
      "get": {
        "summary": "Get projects",
        "operationId": "getProjects",
        "responses": {
          "200": {
            "description": "List of projects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/github/installations": {
      "get": {
        "summary": "List GitHub installations",
        "operationId": "getGithubInstallations",
        "responses": {
          "200": {
            "description": "List of GitHub installations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "303": {
            "description": "Redirect to sign out"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/github/repositories": {
      "get": {
        "summary": "List GitHub repositories",
        "operationId": "getGithubRepositories",
        "parameters": [
          {
            "name": "installation_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of GitHub repositories",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Installation ID is required"
          }
        }
      }
    },
    "/api/user": {
      "get": {
        "summary": "Get current user",
        "operationId": "getUser",
        "responses": {
          "200": {
            "description": "Current user information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "summary": "List all users",
        "operationId": "getUsers",
        "responses": {
          "200": {
            "description": "List of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error fetching users"
          }
        }
      }
    },
    "/api/reset": {
      "post": {
        "summary": "Reset storage",
        "operationId": "resetStorage",
        "parameters": [
          {
            "name": "password",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Storage reset successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid password"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Category": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "docslink": {
            "type": "string"
          }
        }
      },
      "WorkerEvent": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["OBJECT", "PATCH", "ERROR", "LIFECYCLE", "LOG"]
          },
          "objUri": {
            "type": "string"
          },
          "event": {
            "type": "object",
            "properties": {
              "reason": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            }
          }
        }
      },
      "GetResourceResponse": {
        "type": "object",
        "properties": {
          "objects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectEvent"
            }
          }
        }
      },
      "ObjectEvent": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "object": {
            "$ref": "#/components/schemas/ApiObject"
          },
          "objUri": {
            "type": "string"
          },
          "objType": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ApiObject": {
        "type": "object",
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "metadata": {
            "type": "object"
          },
          "spec": {
            "type": "object"
          },
          "status": {
            "type": "object"
          }
        }
      }
    }
  }
}